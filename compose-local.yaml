version: '3.8'

services:
  chzz-mysql:
    image: mysql:latest
    container_name: chzz-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: chzzdb
      TZ: Asia/Seoul
      character-set-server: 'utf8mb4'
      collation-server: 'utf8mb4_unicode_ci'
    ports:
      - "3306:3306"
    volumes:
      - chzz-mysql-data:/var/lib/mysql
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"

  chzz-redis:
    container_name: chzz-redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  #  chzz-frontend:
  #    image: cloudoort/chzzmarket-frontend:1.0
  #    container_name: react-app
  #    ports:
  #      - "5173:5173"
  chzz-es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.5
    container_name: chzz-es
    environment:
      - discovery.type=single-node # 단일 노드
      - xpack.security.enabled=false # 로컬 개발을 위해 SSL 설정을 비활성화
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - bootstrap.memory_lock=true # 메모리 스왑 방지
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g" # Java heap size 설정
    ulimits: # 메모리 락 한도 설정 (-1은 무제한)
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200" # https
      - "9300:9300" # tcp
    volumes:
      - chzz-es-data:/usr/share/elasticsearch/data
    command:
      - /bin/bash
      - -c
      - |
        /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-nori &&
        /usr/local/bin/docker-entrypoint.sh
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.5
    container_name: chzz-kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://chzz-es:9200 # Elasticsearch 호스트 연결
      - SERVER_NAME=kibana
      - XPACK_SECURITY_ENABLED=false # 보안 비활성화
    ports:
      - "5601:5601" # Kibana UI 포트
    depends_on:
      - chzz-es # Kibana가 Elasticsearch와 연결되도록 의존성 추가

#  node-exporter:
#    image: prom/node-exporter:latest
#    container_name: node-exporter
#    restart: unless-stopped
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.rootfs=/rootfs'
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
#    ports:
#      - "9100:9100"
#
#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./monitoring/prometheus:/etc/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    ports:
#      - "9090:9090"
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    volumes:
#      - ./monitoring/grafana:/var/lib/grafana
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    ports:
#      - "3001:3000"
#
#  loki:
#    image: grafana/loki:latest
#    container_name: loki
#    ports:
#      - "3100:3100"
#    volumes:
#      - ./monitoring/loki:/etc/loki
#      - ./monitoring/loki-data:/tmp/loki
#    command: -config.file=/etc/loki/loki-config.yaml

volumes:
  chzz-mysql-data:
  chzz-es-data:
