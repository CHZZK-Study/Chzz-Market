version: '3'
services:
  app1:
    image: "${ECR_IMAGE}"
    ports:
      - "8080:8080"

  app2:
    image: "${ECR_IMAGE}"
    ports:
      - "8081:8080"

  app3:
    image: "${ECR_IMAGE}"
    ports:
      - "8082:8080"

  ecr_renew:
    image: amazonlinux:latest
    container_name: ecr_renew
    environment:
      - AWS_REGION=${AWS_REGION}
      - ACCOUNT_ID=${ACCOUNT_ID}
    command: >
      sh -c 'while :; do
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com;
        sleep 43200;
      done'

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - app1
      - app2
      - app3
      - certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
